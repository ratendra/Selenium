*******Class4**************

1.How many kind of Xpath?
absolute and relative

Relative:
1.inspecting using attributes
//tag[@attribute='attribute value']

2.inspecting using text
//tagname[text()='text']

3.identify by using contain method:
//tagname[contains(@attribute,'attribute Value')]

example:
<input class="form", id="form0">
//input[contains(@id,'form')]
//input[contains(text(),'partialtext')]

4.identify using starts-with the starting partial value
will identify the elements with the starting partial value

//tagname[starts-with@attribute,'partial starting value')]
//tagname[strats-with(text(),'partial starting value')]

---------Topic advance Xpath----------------

Advance Xpath is based upon parent child relationship

1.Identifying element using following sibling

//tagname[@attribute='attribute value']/following-sibling::tagname

go to the tag name whose attribute with value 'attribute value'now get me the following sibling of this tag

//input[@id='message']/following-sibling::label
go to the tagname input which has the attributeid with value message now get me its following sibling with
tagname label

-->in order to use this advance path(following sibling we need to identify on esibling that can be identified
uniquely)

2.identify element using preceding sinbling

//tagname[@attribute='attribute value;]/preceding-sibling::tagname

//input[@id='message']/preceding-sibling::a

go to the tag nameinput whose attribute is id and value is 'message' now get me its preceding-sibling
with tag name a

3.identify the element using parent relationship
//tagname[@attribute='attribute value']/parent::parenttagname

4.anchestor:
//tagname[@attribute='attribute value']/ancestor::ancestorTagname

example:
//input[@id='sum2']/ancestor::div[6]

**************************CSS Selector*********************************
CSS (cascading Styling Sheet)
1.they are very fast
2.easy readable

CSs doesnt allow u to locate using text()

Syntax:
//tagname[attribute ='attribute value']

Shortcuts for CSS:

for ID--'#'
tagname#valueofattributeid

for class --'.'
tagname.valueforattributeclass

contains method in CSS:
*Symbol represent the contains method

tagname[attribute*='partial attribute value']
input[name*='txtU']

STarts with method in CSS:
^Symbol represents starts with method in css
tagname[attribute^='starting attribute value']

ends-with method in CSS:
$ symbols represents the endwith method
tagname[attribute$='starting attribute value']
img[src $='ax.png']